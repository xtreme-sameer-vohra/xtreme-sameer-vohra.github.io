'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/posts/ckad-exam-prep/','title':"CKAD Exam Preparation",'section':"Posts",'content':"The process #  Study #  Took Mumshad\u0026rsquo;s super popular CKAD preparation course. It introduced the relevant kubernetes concepts and the labs at the end of each section were great for reinforcing the material. At $20 the course was a steal ðŸ”¥ðŸ”¥ðŸ”¥. This was the only resource I used and I passed the exam ðŸŽ‰.\nPractice #  From reading about the exam online and from the mock exams in Mumshad\u0026rsquo;s course, I realized that the exam is not hard but you have to be fast. The exam is a practical one and not a theoretical one. While I understood the concepts I was very very slow in the mock exams and was never passing. I had to make the following changes (these tips were from the course and interwebs);\n use the imperative kubectl create resource-to-be-create rather than the declarative one. memorize a few common tidbits (eg. defining a volume on a pod and mounting it at some path in the container) practice practice practice -I did prep exams in Mumshad\u0026rsquo;s course a few times and got progressively faster  Exam #  Use bookmarks #  The exam setup allows you to have 2 tabs open, one for the exam and one for referring to allowed sites such as kubernetes docs. On a smart friend\u0026rsquo;s suggestion, I bookmarked useful doc pages, github examples so I was 1 click away from what I needed rather than searching-\u0026gt;filtering-navigating to find the right info. For advanced mode, you can also change your browser search to search through your bookmarks.\nSetup your exam terminal #   improve my vim setup (it helps in copying yaml from the docs)  ~/.vimrc file with the following content: :set nu #show line numbers :set et #expand-tab :set sw=2 ts=2 sts=2 # shift-width tab-stop soft-tab-stop and using :retab\n use shortcuts alias k=kubectl export do=\u0026quot;--dry-run=client -o yaml\u0026quot; # `k create deployment bar --image foo $do \u0026gt; bar.yaml` to get a yaml file to start modifying   Organize your answers #  Create folders in your exam shell for each question to a clean and organized directory to save and edit yaml files. This will make it easy to come back to questions when re-attempting them.\n"});index.add({'id':1,'href':'/posts/ckad-notes/','title':"CKAD Notes",'section':"Posts",'content':"Sparse CKAD Notes #  Node #  Runs the containers deployed on K8s. It is the worker\nKubelet #  Agent running on the node that monitors health of pods and running pods on the container runtime\nContainer Runtime #  Engine that runs the containers\nMaster #  Handles all requests and is the brains that orchestrates work on the workers\nAPI Server #  Receives all incoming API requests and is the frontend to K8s cluster\nController #  The brains, ensure that what the cluster is running and what is desired keep converging\nScheduler #  Assigns work to the Nodes based on their capacity and work affinity\nEtcd Service #  Key/value store that is used for all state in K8s cluster Holds locks for distributed work\nMisc #  YAML in K8s #   apiVersion - K8s version that defines object kind - type of object (eg Pod) metadata - name, labels spec - defintion of the object  Services #   NodePort - assigns that nodePort on every node so that a service can be accessed via the node IP clusterIP - the default, picks an IP from the pod CIDR and uses that for the service Loadbalancer - uses the external IaaS to create a loadbalancer  Dockerfile #   entrypoint == cmd in pod cmd == args in pod  Ingress #  More advanced solution compared to service to handle path based routing, host based routing, etc to multiple pods\nNetwork Policies #  Firewall rules for a cluster\n"});})();